var createError = require('http-errors'); //change these to constants so cant be changed?
var express = require('express');
var path = require('path');
//for session
var cookieParser = require('cookie-parser');
var session = require('express-session');

var logger = require('morgan');
var handlebars = require('express-handlebars');
var bodyParser = require('body-parser'); //for post requests
var app = express();
var router = express.Router(); //our router for requests

var sqlite3 = require('sqlite3').verbose();
var port = 8080; //443 is https defaul port
var md5 = require('md5'); // use for creating a hash for passwords, need to change to SHA-1
var bodyParser = require('body-parser');

//https and openSSL setup, self signed certificates so browser will have a 'do you want to accept risk' page
const https = require('https'), fs = require("fs");
var key = fs.readFileSync(__dirname+"/keys/selfsigned.key"); //get the key/cert generated by openssl
var cert = fs.readFileSync(__dirname+"/keys/selfsigned.crt");

var options = {
  key: key,
  cert: cert
};

var httpsServer = https.createServer(options, app); //create http server on correct port
httpsServer.listen(port, "localhost");

//setup app directories and viewing engine
app.engine( 'handlebars', handlebars( {
  defaultLayout:'index',
  extname: '.handlebars',
  layoutsDir: __dirname + '/views/layouts',
  partialsDir: __dirname + '/views/partials/'
}));

console.log("Visit http(s)://localhost:8080/");

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'handlebars');

// static delivery of public folder
app.use(logger('dev'));
//for post requests
app.use(express.urlencoded({ extended: true }));
app.use(bodyParser.json());

//cookies for session storage
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

const fillDB = require('./fillDB.js');
fillDB.createTables();
fillDB.fillUsers();

console.log("filled db");

//routing for requests
var indexRoute = require('./routes/index.js');
var demoRoute = require('./routes/demo.js');
var loginRoute = require('./routes/login.js');
var commentsRoute = require('./routes/comments.js');
var productsRoute = require('./routes/products.js');
var downloadsRoute = require('./routes/downloads.js');

app.use('/', indexRoute);
app.use('/demo', demoRoute);
app.use('/products', productsRoute);
app.use('/login', loginRoute);
app.use('/downloads', downloadsRoute);
app.use('/comments', commentsRoute);

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};
  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
